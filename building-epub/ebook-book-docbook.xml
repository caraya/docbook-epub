<?xml version="1.0" encoding="utf-8"?>
<book 
	xmlns='http://docbook.org/ns/docbook' 
	xmlns:xlink="http://www.w3.org/1999/xlink"
	version="5.0" xml:lang="en">
<title>Ebook Publishing and Where it's going</title>
<info>
	<author>
		<personname>
			<firstname>Carlos</firstname><surname>Araya</surname>
		</personname>
	</author>
	<!-- Required to have the image show on the ebook reader cover --> 
	<mediaobject role="cover">
		<imageobject>
			<imagedata fileref="images/docbook.png" format="PNG"/>
		</imageobject>
	</mediaobject>
</info>


<preface>
<title>Why Epub Matters</title>

<emphasis role="bold">eBooks are way more than</emphasis>
<para>Currently eBooks are a combination of both images and text… except for the Apple iBook reader. iBook borrowed from the draft ePub 3 specification (or was it the ePub standard group who simply adopted Apple’s technology?) and allowed for the inclusion of audio and video using HTML5 audio and video embedding technologies. As a result of this early adoption ePub-based ebooks for the iPad, iPhone and iPod touch can view embedded audio and video content directly on the device.</para>

<para>With the ePub 3 standard now being considered a Proposed Specification (See <link xlink:href="http://idpf.org/epub3_proposed_spec_released">http://idpf.org/epub3_proposed_spec_released</link> For more information) it is time for us to reconsider what we do with our eBook content.</para>

<emphasis role="bold">Why go with ePub eBooks?</emphasis>

<para>With tablet PCs and smart phones becoming ubiquitous the market for ebooks and multimedia content has grown just as fast if not faster. You can now provide a single access point for all your content without having to make it public in the open web.</para>

<para>You can make the book look the way you want to without having to resort to large PDF files (before you mention it I have nothing against PDF; when used properly it’s a wonderful and flexible tool, I just think that eBooks are not the right place for PDF content.)</para>

<para>PDF is for the most part a fixed flow layout. You can’t really move and re-flow the text to accommodate different resolution and screen sizes. What looks fine on your desktop PC may not look the same in an iPhone without major vertical and horizontal scrolling.</para>

<para>MOBI is popular (Amazon selected it as the format for the Kindle) but, from my perspective it has several drawbacks:</para>
<itemizedlist>
	<listitem><para>It is a binary format which means that once create the only way to make updates or changes is to edit the original sources and then re-compile into the binary format again.</para></listitem>
	<listitem><para>The format is DRM encumbered.</para></listitem>
	<listitem><para>Encryption locks users to one account and one device.</para></listitem>
	<listitem><para>Large vendors like Amazon.com can remove books already downloaded to devices (See <link xlink:href="http://www.nytimes.com/2009/07/18/technology/companies/18amazon.html">http://www.nytimes.com/2009/07/18/technology/companies/18amazon.html</link> for more information about this incident)</para></listitem>
</itemizedlist>

<para>ePub on the other hand remains a text-based format where the files are bundled together in a zip file that requires little or no tools depending how familiar you are with generating XML and XHTML content. What’s more important is that with ePub 3 you can add multimedia and accessibility elements finally making books as accessible as regular websites.</para>

<para>You can provide your clients with content as engaging as that on your blog or website. The only limitation is that ePub 3 is not widely adopted yet… that is about to change.</para>
</preface>

<chapter>
	<title>Rethinking the future of books</title>
	<subtitle>Random thoughts on books as artifacts</subtitle>

	<para>With the introduction of all iPads and other tablet readers we are left with some big question: Are books still relevant? If they are still relevant, how do they need to change?</para>

	<para>Craig Mod has written and spoken about the future of books and what we can do with books online with the new technologies for both creating the content and financing the production of the content. </para>

	<para>Craig presented the Do Lecture below in 2011 and it caught my attention for a variety of reasons. How do we leverage the new technologies for books and the new devices we use to read these new books. </para>

Thanks to Bob Sayton for providing this code and a fix on the XSL stylesheets' snapshot 

<mediaobject>
	<videoobject>
		<videodata controls="controls" fileref="video/do-lectures.mp4"/>
	</videoobject>
	<imageobject role="poster">
		<imagedata fileref="video/do-lectures.png"/>
	</imageobject>
	<textobject>
		<para>Craig Mod presenting at the Do Lecture in 2010</para>
	</textobject>
</mediaobject>

<para>Some of the things that caught my attention:</para>

<sect1>
	<title>New ways to produce content</title>

	<para>We can create more interactive content as part of our books. The new ePub 3 standard includes multimedia content (audio and video) as part of what we put in our books. While iBooks uses a somewhat different format than the standard ebook format it already allows for the inclusion of audio and video.</para> 

	<para>We can incorporate external video or we can produce our own as part of the book creation process. Whichever way we choose this prompts a new way of thinking about books. If we can embed multimedia content directly into books, how are they now different than regular web pages? Sure, we can't embed java applets or flash video but we can easily link to pages on the web that have the content.</para>

	<para>Are we requiring our users to be constantly online in order to interact with our content? If we add multimedia content to a book, does it mean that users have to be online while reading? For most tablets this is not an issue as internet connectivity is bundled with the device. As designers, however, we need to keep in mind that not all users have wireless connectivity for their devices. </para>

	<para>Using <link xlink:href="http://craigmod.com/bibliotype/">Bibliotype</link> as a starting point we can explore alternatives and options for putting content into web browsers and other devices without having to author a full eBook. </para>
</sect1>
<sect1>
	<title>What tools do we use to create the content?</title>

	<para>One of the things that attracted me to creating ePub content is the variety of tools that are available to do so. Starting with  relatively simple tools like Sigil or Pages to create ePub content we can get as sophisticated as we want or need to be. tools like iBook Creator can provide a high level of sophistication at the expense of being cross platform. </para>

	<para>For those of us used to creating multiple versions of a document using an XML base; it is good to know that tools like Docbook can now create ePub 2 and ePub 3 content from the same basic XML document that we have used to create HTML and PDF versions of our content in the past. </para>

	<para>Whatever tools we use we need to decide if the multimedia features or access to our content by a specific device make it worthwhile to create multiple versions of our content</para>
</sect1>
<sect1>
<title>Project funding as a means of engagement</title>

	<para>We can use sites like <link xlink:href="http://kickstarter.com/">Kickstarter</link> as both a fund raising site and as a way to engage our community of users. </para>

	<para>Kickstarter allows content creators to setup their project with the following parameters:</para> 

	<itemizedlist>
		<listitem>A description of the project</listitem>
		<listitem>The Fund raising steps/stages both the amount and what benefit do you derive</listitem>
		<listitem>The amount to be raised and how long we have to do it</listitem>
		<listitem>A discussion area for the project</listitem>
	</itemizedlist>

	<para>Kickstarter acts like an escrow service. If the full amount is raised in the allocated time then each individual contributor's credit card will be charged for the amount they pledged; otherwise nothing happens. </para>

	<para>More than fund raising, Kickstarter allows you to create a community around your project. It's not just the monetary support that brings the supporters together. They are interested in seeing the project funded and completed for whatever reason they have. They are your funding agency or agencies and they can be your sounding board and your reality check when needed.</para>

	<para>Another interesting site is <link xlink:href="http://www.indiegogo.com/">Indiegogo</link> which provides one additional feature that I find interesting: The option of flexible funding where you get all the fund pledged by the target date regardless of whether you met your fundraising goal or not.</para>  
</sect1>
<sect1>
	<title>How do we engage with book in a digital format?</title>

	<para>Seth Godin asks the question:</para>

	<blockquote>
	<para>What happens when a publisher has a tight, direct connection with readers, is able to produce intellectual property that spreads, and can do both quickly and at low cost?<footnote xml:id="source1"><para>Seth Godin created the <link xlink:href="http://www.thedominoproject.com/about">Domino project</link> as a way to put the publishers closer in contact with their audiences. This is one of the questions he asks on the site.</para></footnote></para> 
	</blockquote>

	<para>We have to start by accepting that, in this context, we are all publishers and we all have networks or hives of people who can support us in our creative endeavors. Being exposed to feedback early and often is a great way to eliminate uncertainty and provide a sounding board even before the project actually begins.<footnote xml:id="fields"><para>See chapter 5 and 6 in Jonathan Field's book <link xlink:href="http://www.theuncertaintybook.com/">Uncertainty</link> for more on creating hives and using them as support mechanisms.</para></footnote></para>
</sect1>
<sect1>
<title>Blogs as book drafts</title>

	<para>We are not only publishers but we're experts as well. For those of us who blog or maintain a professional or business related website the expertise is right there. We can use blogs to author content, to measure interest based on comments and get feedback from our hive of users.</para>

	<para>Does this work for everyone? Probably not. After all we are not all alike in the way we handle criticism and feedback for something that's not necessarily complete and in a way we'd like people to see it and comment on. </para>

	<para>But that's they key... it is not ready which means that the feedback we get at the early stages of the project will allow us to change the content or even change the project we are working on and this will definitely make the project better.</para>
</sect1>
<sect1>
	<title>Creating multiple delivery methods from the same content</title>

	<para>When I first started working with <link xlink:href="http://docbook.org/">Docbook</link> one of the things that attracted me to it was the fact that from the same source, using different XSLT style sheets you can produce different formats for your document. </para>

	<para>In the last couple years, the Docbook community has expanded the range of formats and it now includes ePub3. It's easier than ever to create content in a document neutral format and then convert it to HTML, PDF and ePub without bigger effort than creating customizations to the stock <link xlink:href="http://docbook.sourceforge.net/">style sheets</link> which we can then reuse on future projects.</para>
</sect1>
</chapter>
<chapter>
	<title>InDesign Ebook</title>

<para>Designing eBooks with Adobe InDesign is, in my opinion, one of the most counter intuitive process for creating eBooks. It may be because I'm not as proficient in InDesign as I am in writing XML (to use with Docbook) or with tools like Sigil or even iBooks (very similar to Pages on the Mac).   It may also be my dislike of having to do desktop publishing as a first step to arrive to a format that will most likely not remain in the final product</para>

<para>But on the other hand that may be one of the strengths of using InDesign for book production. We can create high quality PDF and the modify the base InDesign document to produce your ebook content from the same source with the understanding that it will not be exactly the same as our high quality PDF.</para>

<para>Here is a link to the base <link xlink:href='http://rivendellweb.net/work/wp-content/uploads/2012/04/sherlock-holmes-id55.indd'> InDesign File</link> for the ebook.</para> 

<para>To create the basic ePub book I created Text Frames and inserted the text into the frames. There is a little trick in InDesign where you can hit shift when placing the text and it will add as many frames and pages as necessary.</para> 

<para>Here's a link to the first <link xlink:href='http://rivendellweb.net/work/wp-content/uploads/2012/04/sherlock-holmes-id55.epub'>version of the ePub book</link></para>

<emphasis role="bold">Validation</emphasis>

<screen>java -jar \
    /usr/local/java/epubcheck/epubcheck-3.0b4.jar \
    sherlock-holmes-id55.epub 

Epubcheck Version 3.0b4

Validating against EPUB version 2.0
WARNING: sherlock-holmes-id55.epub/OEBPS/content.opf(6,24): title element is empty
ERROR: sherlock-holmes-id55.epub/OEBPS/content.opf(17,46): character content of element 
"dc:identifier" invalid; must be a string with length at least 1 (actual length was 0)

Check finished with warnings or errors!
</screen>

<para>We fix this by expanding the epub file using the forderedlistlowing command:</para>

<screen>unzip sherlock-holmes-id55.epub 
Archive:  sherlock-holmes-id55.epub
 extracting: mimetype                
  inflating: OEBPS/sherlock-holmes-id55.html  
  inflating: META-INF/container.xml  
  inflating: OEBPS/images/191.png    
  inflating: OEBPS/fonts/linkmericanTypewriter-Borderedlistd.ttf  
  inflating: OEBPS/fonts/CharcoalCY.ttf  
  inflating: OEBPS/fonts/PTSans-Regular.ttf  
  inflating: META-INF/encryption.xml  
  inflating: OEBPS/content.opf       
  inflating: OEBPS/toc.ncx           
  inflating: OEBPS/template.css      
</screen>

<para>And editing the file OEBPS/content.opf  The relevant part of the file looks like this:</para>

<screen>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;package xmlns="http://www.idpf.org/2007/opf" 
		zxmlns:dc="http://purl.org/dc/elements/1.1/" 
		unique-identifier="bookid" 
		version="2.0"&gt;
&lt;metadata&gt;
	&lt;meta name="generator" content="Adobe InDesign"/&gt;
	&lt;meta name="cover" content="x191.png"/&gt;
	&lt;dc:title&gt;The Adventures of Sherlock holmes&lt;/dc:title&gt;
	&lt;dc:creator&gt;Arthur Conan Doyle&lt;/dc:creator&gt;
	&lt;dc:subject&gt;&lt;/dc:subject&gt;
	&lt;dc:description&gt;&lt;/dc:description&gt;
	&lt;dc:publisher&gt;&lt;/dc:publisher&gt;
	&lt;dc:date&gt;2012-04-05&lt;/dc:date&gt;
	&lt;dc:source&gt;&lt;/dc:source&gt;
	&lt;dc:relation&gt;&lt;/dc:relation&gt;
	&lt;dc:coverage&gt;&lt;/dc:coverage&gt;
	&lt;dc:rights&gt;&lt;/dc:rights&gt;
	&lt;dc:language&gt;en-US&lt;/dc:language&gt;
	&lt;dc:identifier id="bookid"&gt;&lt;/dc:identifier&gt;
	&lt;dc:identifier&gt;urn:uuid:79712F50-003F-4967-9382-9A93E6DC216F&lt;/dc:identifier&gt;
&lt;/metadata&lt;
</screen>

<para>We need to make sure that both the dc:title and dc:creator tags have values entered. Once that is completed we can zip the file again using the forderedlistlowing commands.</para>

<screen>zip -X0 sherlock-holmes.epub mimetype  
zip -r -X9 sherlock-holmes.epub META-INF OEBPS
</screen>

<itemizedlist>
	<listitem><para>The first command adds the ‘mimetype’ file first and uncompressed.</para></listitem>
	<listitem><para>The -X option excludes extra file attributes (required by epub3).</para></listitem>
	<listitem><para>The numbers indicate the degree of compression.</para></listitem>
	<listitem><para>The -r option means recursively include all directories.</para></listitem>
	<listitem><para>The “sherlock-holmes.epub” in this example is the output file.</para></listitem>
</itemizedlist>

<para>And trying the epub check again as many times as necessary.</para>

<para>Here is <link xlink:href='http://rivendellweb.net/work/wp-content/uploads/2012/04/sherlock-holmes-ind55-v2.epub'>version 2</link> of the ePub file with all the corrections made to the file.</para> 

<emphasis role="bold">Conversion to Kindle .mobi</emphasis>

<para>Amazon has made an InDesign plugin available as part of the <link xlink:href="http://www.amazon.com/gp/feature.html?ie=UTF8&amp;docId=1000234621">Kindle Publishing Program</link>. I attempted to install versions 0.95 and 0.96 of the plugin into my InDesign 5.5 installation (7.5.1) and was unable to complete the installation.</para>

<para>Using the version we've just fixed, I used Kindlegen to create the Mobi file to use in Kindle devices. The command I used is listed below:</para>

<screen>/usr/local/kindlegen/kindlegen sherlock-holmes-ind55-v2.epub 
</screen>

<para>And the result is displayed following:</para>

<screen>**************************************************
* Amazon.com kindlegen(MAC OSX) V2.4 build 69900 *
* A command line e-book compiler                 *
* Copyright Amazon.com 2012                      *
**************************************************

Info(prcgen):I1047: Added metadata dc:Title        "The Adventures of Sherlock holmes"
Info(prcgen):I1047: Added metadata dc:Date         "2012-04-05"
Info(prcgen):I1047: Added metadata dc:Creator      "Arthur Conan Doyle"
Info(cssparser):I10004: @rules other than @import, @charset and @font-face are not supported.
Info(prcgen):I1002: Parsing files  0000001
Info(prcgen):I1015: Building PRC file
Info(prcgen):I1006: Resolistving hyperlinks
Info(prcgen):I1049: Building table of content     URL: /var/forderedlistders/g0/y7fl8_q91n7dt6g0g39nxqqr0000gn/T/mobi-9TekHz/OEBPS/toc.ncx
Info(pagemap):I8000: No Page map found in the book
Info(prcgen):I1045: Computing UNICODE ranges used in the book
Info(prcgen):I1046: Found UNICODE range: Basic Latin [20..7E]
Info(prcgen):I1046: Found UNICODE range: General Punctuation - Windows 1252 [2018..201A]
Info(prcgen):I1046: Found UNICODE range: Latin-1 Supplement [A0..FF]
Info(prcgen):I1017: Building PRC file, record count:   0000039
Info(prcgen):I1039: Final stats - text compressed to (in % of original size):  47.60%
Info(prcgen):I1040: The document identifier is: "The_Adventur-herlock_holmes"
Info(prcgen):I1041: The file format version is V6
Info(prcgen):I1031: Saving PRC file
Info(prcgen):I1032: PRC built successfully
Info(prcgen):I1016: Building enhanced PRC file
Info(prcgen):I1007: Resolistving mediaidlinks
Info(prcgen):I1011: Writing mediaidlinks
Info(prcgen):I1009: Resolistving guide items
Info(prcgen):I1017: Building PRC file, record count:   0000030
Info(prcgen):I1039: Final stats - text compressed to (in % of original size):  53.92%
Info(prcgen):I1041: The file format version is V8
Info(prcgen):I1036: Mobi file built successfully
</screen>

<para>The resulting file is <link xlink:href='http://rivendellweb.net/work/wp-content/uploads/2012/04/sherlock-holmes-ind55-v2.mobi'>available here</link> for download and evaluation. </para>

<sect1>
	<title>Further Notes</title>

<para>This book does not have a Table of Content yet. I'm working on a second version of the book that will have Table of Content. Also note that the title and author appear in the same page as the first chapter; I'm researching whether we can change this or not. </para> 
</sect1>
</chapter>

<chapter>
	<title>Docbook, XML and ebooks: Doing it the old fashioned way</title>

<para>One of the most traditional ways to author content for multiple distribution channels is to roll up your sleeves, write XML and then convert it to your target format. For this exercise we will use <link xlink:href="http://www.docbook.org/">Docbook</link>.</para> 

<para>Without going into too much detail, Docbook was initially created in 1991 as a means to create computer software manuals and other technical documentation.<footnote xml:id="Docbook"><para>More information about the history of Docbook can be found in the <link xlink:href="http://docbook.org/tdg51/en/html/ch01.html#s.shorthistory">Docbook: The Definitive Guide</link> website</para></footnote> Over the years Docbook has evolved into a general purpose XML authoring language. </para>

<para>Along with the authoring standard, what structures we can use to author our content, the authors of the Docbook standard have also created a set of stylesheets to convert our base XML files into different formats. One of the formats that you can convert your XML files is epub. </para>

<sect1>
	<title>Getting Started</title>

<para>Below is a skeleton XML file for a Docbook-based book.</para> 

<screen>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;book xmlns='http://docbook.org/ns/docbook' version="5.0" xml:lang="en"&gt;
&lt;title&gt;The Adventures of Sherlock holmes&lt;/title&gt;
&lt;info&gt;
	&lt;author&gt;
		&lt;personname&gt;
			&lt;firstname&gt;Arthur&lt;/firstname&gt;&lt;surname&gt;Conan Doyle&lt;/surname&gt;
		&lt;/personname&gt;
	&lt;/author&gt;
	&lt;/info&gt;
&lt;chapter&gt;
&lt;title&gt;A Chapter&lt;/title&gt;
	&lt;para&gt;Content is required in chapters too.&lt;/para&gt;
&lt;/chapter&gt;
&lt;/book&gt;
</screen>

<para>Once we have the XML document ready (filling out the skeleton with as many chapters as we need to complete our content), we need two things:</para>  

<itemizedlist>
	<listitem>A set of XSLT stylesheets to convert our XML into HTML and ePub</listitem>
	<listitem>A processor to actually run the transformation</listitem>
</itemizedlist>

<para>The stylesheets are located at <link xlink:href="http://sourceforge.net/projects/docbook/files/docbook-xsl-ns/1.76.1/">http://sourceforge.net/projects/docbook/files/docbook-xsl-ns/1.76.1/</link> where you can choose if you want .zip or .tag.gz compressed archives. In addition download the file at <link xlink:href="http://sourceforge.net/projects/docbook/files/epub3/docbook-epub3-addon-b3.zip">http://sourceforge.net/projects/docbook/files/epub3/docbook-epub3-addon-b3.zip</link> and <link xlink:href="http://sourceforge.net/projects/docbook/files/epub3/README.epub3">http://sourceforge.net/projects/docbook/files/epub3/README.epub3</link>. To enable ePub3 support forderedlistlow the instructions on the README.epub3 file.</para>

<para>As far as XSLT processors there are two that I recommend.  One is Saxon (currently at version 9.4 and available from its publisher <link xlink:href="http://saxonica.com/download/download.xml">Saxonica</link>) written in Java it provides a full set of features, extensions and advanced implementations of XML related technorderedlistogies. For our purposes it's enough that it will take the XML, process it with the style sheets and give us the output we want. </para>

<para>The second processor I recommend is XSLTProc. written in C and bundled with Most UNIX/Linux/OSX installations it can be downloaded/updated from the <link xlink:href="http://xmlsoft.org/downloads.html">xmlsoft.org</link> web site. Download and install both LibXML and LibXSLT and install them in the same order (LibXML first and then LibXSLT) or it will not work as you think it will. </para>

<para>The commands to create the ebooks are as follows using Xsltproc are:</para>

<screen>xsltproc /Users/carlos/docbook/1.0/xslt/epub3/chunk.xsl ebook.xml
</screen>

<para>This produces an output that should look like this:</para>

<screen>Writing OEBPS/bk01-toc.xhtml for book
Writing OEBPS/ch01.xhtml for chapter
Writing OEBPS/ch02.xhtml for chapter
Writing OEBPS/index.xhtml for book
Writing OEBPS/docbook-epub.css for book
Generating EPUB package files.
Generating image list ...
Writing OEBPS/package.opf for book
Writing OEBPS/../META-INF/container.xml for book
Writing OEBPS/../mimetype for book
Generating NCX file ...
Writing OEBPS/toc.ncx for book
&lt;?xml version="1.0" encoding="UTF-8"?>
'
</screen>
</sect1>

<sect1>
	<title>Final Details</title>

<para>We are done generating the content and the files we need in order to generate the eBook. To finish the process we need to do the following (taken from the README.epub3 file):</para> 

<orderedlist>
<listitem>
<para>Manually copy any image files used in the document into the corresponding locations in the $base.dir directory.  For example, if your document contains:</para>

<screen>&lt;imagedata fileref="images/caution.png"/&gt;</screen>

<para>In this example you would copy the file to:</para>

<screen>ebook1/OEBPS/images/caution.png</screen>

<para>You can get a list of image files from the manifest file named ebook1/OEBPS/package.opf that is created by the style sheet. It currently will *not* include generated image files for callouts, header/footers, and admonitions. That feature will be added later.</para>
</listitem>

<listitem>cd to the directory containing your mimetype files, which would be ebook1 in this example.</listitem>

<listitem>
<para>Run the following zip commands to create the epub file:</para>

<screen>zip -X0 sherlock-holmes.epub mimetype   
zip -r -X9 sherlock-holmes.epub META-INF OEBPS 
</screen>

<para>The first command adds the 'mimetype' file first and uncompressed.</para>
<para>The -X option excludes extra file attributes (required by epub3).</para>
<para>The numbers indicate the degree of compression.</para>
<para>The -r option means recursively include all directories.</para>
<para>The "sherlock-holmes.epub" in this example is the output file.</para>
</listitem>
</orderedlist>
</sect1>
<sect1>
	<title>Validation</title>

	<para>Because we have done most of the work manually we need to validate the result of our work.  For that we will use the epubcheck3 toorderedlist available from its <link xlink:href="http://code.google.com/p/epubcheck/wiki/EPUBCheck30">Google Code Project</link>.</para> 

<screen>java -jar /Users/carlos/Java/epubcheck-src-3.0b3/dist/epubcheck-3.0b3.jar \
sherlock-holmes.epub 
</screen>

<para>Hopefully we'll see a result like this</para>

<screen>Epubcheck Version 3.0b3

No errors or warnings detected.
</screen>
</sect1>
<sect1>
	<title>The end result</title>

	<para>Here is the <link xlink:href='http://rivendellweb.net/work/wp-content/uploads/2012/04/sherlock-holmes.epub'>ePub3</link> generated file</para>
</sect1>
</chapter>
<chapter>
	<title>Sigil EBook</title>

	<para>To create this e-book I used Sigil version 0.3.4 which is not the latest version (the latest version is always available from Sigil's <link xlink:href="http://code.google.com/p/sigil/">Google Code Project Page</link>). This latest version may not exhibit all the issues that I found in creating the book.</para>

	<para>To download the sample file click on this link: <link xlink:href='http://rivendellweb.net/work/wp-content/uploads/2012/02/sherlock_holmes_sigil.epub'>sherlock_holmes_sigil.epub</link></para>

<sect1>
	<title>Observations and Validation</title>

	<para>Make sure that your source text file does not have hard carriage returns. While these may not affect creation but it makes it hard determine where paragraphs end and, depending on your source material, it may introduce non printable characters in the HTML documents that are part of ePub with unpredictable results.</para>

	<para>Sigil allows for easier chapter creation by partitioning the file either creating new files or breaking existing files through a command.</para>

	<para>The ePub Document validates as ePub 2 without errors.</para>

	<screen>java -jar /usr/local/java/epubcheck/epubcheck-3.0b4.jar sherlock_holmes_sigil.epub 
	Epubcheck Version 3.0b4

	Validating against EPUB version 2.0
	No errors or warnings detected.
	</screen>
</sect1>

<sect1>
	<title>Kindle Conversion</title>

	<para>Using the Kindlegen utility we can convert the epub bookk into the Kindle .mobi format. Note that the format Sigil supports is ePub 2. Until the underlying technorderedlistogy supports more of the HTML5 specification there won't be any support for ePub3 in Sigil. Authors state they are working on it but it's not completely up to them.</para> 

<screen>/usr/local/kindlegen/kindlegen sherlock_holmes_sigil.epub 

	**************************************************
	* Amazon.com kindlegen(MAC OSX) V2.4 build 69900 *
	* A command line e-book compiler                 *
	* Copyright Amazon.com 2012                      *
	**************************************************

	Info(prcgen):I1047: Added metadata dc:Title        "The Adventures of Sherlock holmes"
	Info(prcgen):I1047: Added metadata dc:Creator      "Arthur Connandoyle"
	Info(prcgen):I1002: Parsing files  0000005
	Info(prcgen):I1015: Building PRC file
	Info(prcgen):I1006: Resolistving hyperlinks
	Info(prcgen):I1049: Building table of content     
	        URL: /var/forderedlistders/g0/y7fl8_q91n7dt6g0g39nxqqr0000gn/T/mobi-EcNYqJ/OEBPS/toc.ncx
	Warning(prcgen):W14016: Cover not specified
	Info(pagemap):I8000: No Page map found in the book
	Info(prcgen):I1045: Computing UNICODE ranges used in the book
	Info(prcgen):I1046: Found UNICODE range: Basic Latin [20..7E]
	Info(prcgen):I1046: Found UNICODE range: Latin-1 Supplement [A0..FF]
	Info(prcgen):I1017: Building PRC file, record count:   0000037
	Info(prcgen):I1039: Final stats - text compressed to (in % of original size):  55.67%
	Info(prcgen):I1040: The document identifier is: "The_Adventur-herlock_holmes"
	Info(prcgen):I1041: The file format version is V6
	Info(prcgen):I1031: Saving PRC file
	Info(prcgen):I1033: PRC built with WARNINGS!
	Info(prcgen):I1016: Building enhanced PRC file
	Info(prcgen):I1007: Resolistving mediaidlinks
	Info(prcgen):I1011: Writing mediaidlinks
	Info(prcgen):I1009: Resolistving guide items
	Info(prcgen):I1017: Building PRC file, record count:   0000041
	Info(prcgen):I1039: Final stats - text compressed to (in % of original size):  54.34%
	Info(prcgen):I1041: The file format version is V8
	Info(prcgen):I1032: PRC built successfully
	Info(prcgen):I1037: Mobi file built with WARNINGS!
	[/bash]
</screen>

	<para>Here is the resulting <link xlink:href='http://rivendellweb.net/work/wp-content/uploads/2012/04/sherlock_holmes_sigil.mobi'>Mobi file</link> that can be opened on a Kindle</para>
</sect1>
</chapter>

<chapter>
	<title>So many options, which one do I choose</title>

<emphasis role="bold">The Story So Far</emphasis>

	<para>So far we've converted text files using Sigil, Adobe InDesign and Docbook XML to create ePub ebooks. We then used Kindlegen to convert the ePub ebooks to MOBI so they can be read by the Kindle family of devices.</para>

	<para>Having all these tools available begs the question: What tools should I use? </para>

<emphasis role="bold">The Short Answer</emphasis>

	<para>It depends on what you have available and what other formats you want to put the content on.</para>

<emphasis role="bold">The Longer Answer</emphasis>

	<para>Before we consider the tools that we will use to create our ePub content will depend on the platform you're using to create the content and what additional formats you want to release your eBook on.</para>

	<para>Because I am used to writing XML by hand, I suggest the following workflow, we'll discuss alternatives below. </para>

	<orderedlist>
		<listitem>Write the text in XML using the Docbook vocabulary</listitem>
		<listitem>Convert the resulting document to a single HTML file to test that there are no errors in the XML document</listitem>
		<listitem>Convert the XML document into ePub 3</listitem>
		<listitem>Validate the ePub document using epubcheck</listitem>
		<listitem>If necessary, convert the document to MOBI using Kindlegen</listitem>
		<listitem>If working with iBooks, copy the text to iBook author and reinsert any multimedia you had in the document</listitem>
	</orderedlist>

	<para>This is a fairly simple yet robust tool chain that can be expanded to generate PDF and HTML without making any changes to the XML document. We add one more step to generate a single-file HTML document and download Apache FOP or XEP to generate the PDF and that completes our tool chain. </para>

	<para>But what happens if we already have InDesign Documents or if our primary requirement is iBook or PDF? In that case I would modify the workflow and use InDesign as the basis for my eBook creation, something like this:</para>

	<orderedlist>
		<listitem>Create the InDesign document</listitem>
		<listitem>Export the files to PDF</listitem>
		<listitem>Export the InDesign document to ePub, preview in your ebook reader and make any changes that you need to the InDesign file and export again as needed</listitem>
		<listitem>Validate the ePub document using epubcheck</listitem>
		<listitem>If necessary, convert the document to MOBI using Kindlegen (I have not been able to get the Kindlegen plugin working)</listitem>
	</orderedlist>

	<para>Docbook does allow you to create PDF document but not to the level that InDesign does. </para>
</chapter>

</book>