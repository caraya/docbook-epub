<?xml version="1.0" encoding="utf-8"?>
<book 
	xmlns='http://docbook.org/ns/docbook' 
	xmlns:xlink='http://www.w3.org/1999/xlink'
	version="5.0" xml:lang="en">
<title>Ebooks: From Docbook to ePub and Kindle too</title>
<info>
	<author>
		<personname>
			<firstname>Carlos</firstname><surname>Araya</surname>
		</personname>
	</author>
	</info>
<preface>
<title>Publishing for everyone</title>
<subtitle>Trying to get down to a definition of publishing</subtitle>

<para>Publishing is no longer the province of big publishers or that crazy people who dream of writing a book and find out that the only way to get published is to do it themselves. Well, we all can publish our work with tools like Docbook,  formats like ePub and publishers like Amazon.</para>

<para>We all have something to publish. We all have something to tell the world.</para>

<para>I chose to publish my content using Docbook because of it's flexibility. While we're talking only about ePub and Kindle publishing, Docbook can generate a variety of other formats using the same tools that we are using to generate our ePub content. You can learn more about Docbook and the associated XSLT style sheets at <link xlink:href="http://www.docbook.org/">http://www.docbook.org/</link>.</para>

<para>This e-book seeks to answer three questions that, to me, are essential to a successful publishing endeavor:</para>

<itemizedlist>
	<listitem>Why should I publish my own content?</listitem>
	<listitem>Why should I use Docbook to do it?</listitem>
	<listitem>How do I create my ebook using this tools?</listitem>
</itemizedlist>

<para>In answering these questions my hope is that you will create new content and give it to the world. I'm sure we'll all be much better for it</para>
</preface>

<chapter>
<title>Why should I create an ebook? Why with Docbook?</title>
<para>Again, We all have something to say to the world. And ebooks make it easier than ever to have the world as your audience. Whatever form your message takes we can build a book and a community around it. We have different technologies to communicate before, during and after creating our content and we are given plenty of opportunities to engage with our readers during the process.</para>

<para>Take bloggers for example. We can leverage our blog as a development platform for written content with multiple drafts and selectively, based on the feedback received from readers, can use the best content as part of our book or books. We have not only authored the content of the book months or years in advance but we have also built a community of people who are vested in the content we author.</para>

<para>We can also engage the community as co-authors of our content. With proper clearance we can edit the users' comments into the narrative that we initially wrote on our blog and weave a fuller narrative about our content. We can further refine the content by making the result of our collaboration available to the community and further edit the book thus it becoming a living document that evolves according to what the community sees as new or interesting. </para>

<para>I don't know about you but I've always dreamed of writing the great big novel. Now it's within our reach. We don't have to worry about getting it published... we can do it ourselves! and not only that, but we can do it as often as we want to. </para>

<para>We can use tools such as <link xlink:href="https://github.com">Github</link> to maintain our collaboration. With tools like this we are no longer limited to manual updates; all collaborators can stay up to date with what everything else is doing by downloading the content of the book and updating periodically. If there is disagreement it can be hammered out as the book is being written and read by everyone rather than at the end of the process when changes are costlier and people are invested in the book as is.<footnote><para>The XML source for this book along with all the ancillary files (Ant build files and others) are available on Github at <link xlink:hrf="https://github.com/caraya/docbook-epub">https://github.com/caraya/docbook-epub</link></para></footnote></para>
<sect1>
<title>Why Docbook?</title>

<para>Over the years <link xlink:href="http://docbook.org/">Docbook</link> has proved to be a very versatile vocabulary for book authoring. I've written training manuals and converted them to PDF, HTML and even Microsoft Help. Epub (both version 2 and 3) are another tool added to the arsenal.</para>

<para>In addition to the standard itself there are a set of XSLT style sheets that power the transformation process. These stylesheets are available from the <link xlink:href="http://sourceforge.net/projects/docbook/">Docbook Sourceforge Project</link> page.</para>
<sect2>
	<title>Is Docbook the only alternative for creating ebooks?</title>
	
	<para>No, it isn't.</para>
</sect2>
</sect1>
</chapter>

<chapter>
<title>Creating your Docbook content</title>
<para>Content is required in chapters too.</para>
<programlisting>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;book 
	xmlns='http://docbook.org/ns/docbook' 
	xmlns:xlink='http://www.w3.org/1999/xlink'
	version="5.0" xml:lang="en"&gt;
&lt;title&gt;Using From Docbook to ePub and Kindle too&lt;/title&gt;
&lt;info&gt;
	&lt;author&gt;
		&lt;personname&gt;
			&lt;firstname&gt;Carlos&lt;/firstname&gt;&lt;surname&gt;Araya&lt;/surname&gt;
		&lt;/personname&gt;
	&lt;/author&gt;
	&lt;/info&gt;
&lt;chapter&gt;
&lt;title&gt;Required Title&lt;/title&gt;

&lt;para&gt;Required paragraph.&lt;/para&gt;

&lt;/chapter&gt;
</programlisting>
</chapter>

<chapter>
<title>Converting the XML into different formats</title>
	<para>something interesting goes here</para>

<sect1>
	<title>Converting to ePub 2</title>
	<para>Content is required in chapters too.</para>
</sect1>

<sect1>
<title>Making an ePub3 ebook </title>
	<para>Content is required in chapters too.</para>
</sect1>

<sect1>
<title>Let's not forget the Kindle</title>
	<para>Content is required in chapters too.</para>
</sect1>
</chapter>

<chapter>
<title>Customizing the generated HTML</title>
	<para>Content is required in chapters too.</para>
</chapter>

<chapter>
	<title>Automating the process</title>

<sect1>
	<title>Apache Ant and making things easier on yourself</title>
	
	<para>I love Apache Ant</para>
</sect1>

<sect1>
	<title>One little addition or substractions</title>

	<para>Because I'm paranoid and I like to build my book over and over I found out a problem. If I accidentally delete any of the directories that Docbook creates for me, the build process will fail. However, removing the existing files and directories is essential to ensure that only the latest version of our generated files makes it into the ebook.</para>

<para>I decided to use the If ant task from the Ant Contrib Project. Download links and instructions for installing the additional tasks and configuring your build file to use them see <link xlink:href="http://ant-contrib.sourceforge.net/">http://ant-contrib.sourceforge.net/</link>.</para>

<para>The <emphasis>if</emphasis> task acts as a conditional if. It allows a task to branch out based in a condition, in our case if a directory exists. If it does then go ahead and delete everything (Docbook will never create the directory we're using for the condition alone); if it doesn't exist then print a message and do nothing.</para>

<para>if you do not want to use the if task for whatever reason you will have to make the following changes:</para>

<para>Remove <emphasis>&lt;taskdef resource="net/sf/antcontrib/antcontrib.properties"/&gt;</emphasis> from your build file.</para>

<para>Remove <emphasis>&lt;antcall target="epub-clean"/&gt;</emphasis> from bot the epub and epub3 targets. This call will cause the build to fail if any of the files or directories are missing. You will have to run this task manually before building the book.</para>

<para>Change the epub-clean target from this:</para>

<programlisting>&lt;target name="epub-clean"&gt;
&lt;description&gt;
	Cleans up leftover epub stuff
&lt;/description&gt;
&lt;if&gt;
	&lt;available file="OEBPS" type="dir" /&gt;
	&lt;then&gt;
		&lt;echo message="Directory exist... deleting" /&gt;
		&lt;delete verbose="true"&gt;
			&lt;fileset dir="OEBPS" includes="*"/&gt;
			&lt;fileset dir="META-INF" includes="*"/&gt;
		&lt;/delete&gt;
		&lt;delete verbose="true" file="mimetype"/&gt;
		&lt;delete verbose="true" dir="META-INF"/&gt;
		&lt;delete verbose="true" dir="OEBPS"/&gt;
		&lt;delete verbose="true" file="${src_file}.epub"/&gt;
	&lt;/then&gt;
	&lt;else&gt;
		&lt;echo message="Directory DOES NOT exist... Nothing to delete" /&gt;
	&lt;/else&gt;
&lt;/if&gt;
&lt;/target&gt;</programlisting>

<para>to this:</para>

<programlisting>&lt;target name="epub-clean"&gt;
&lt;description&gt;
	Cleans up leftover epub stuff
&lt;/description&gt;
&lt;delete verbose="true"&gt;
	&lt;fileset dir="OEBPS" includes="*"/&gt;
	&lt;fileset dir="META-INF" includes="*"/&gt;
&lt;/delete&gt;
&lt;delete verbose="true" file="mimetype"/&gt;
&lt;delete verbose="true" dir="META-INF"/&gt;
&lt;delete verbose="true" dir="OEBPS"/&gt;
&lt;delete verbose="true" file="${src_file}.epub"/&gt;
&lt;/then&gt;
&lt;/target&gt;</programlisting>

<para>Notice how we've removed the if, available, then and else tags on the epub-clean tag.</para>
</sect1>

<sect1>
	<title>The final build file</title>

<para>After adding the if task the complete build file looks like this:</para>

<programlisting>&lt;project name="epub" default="epub3" basedir="."&gt;
&lt;description&gt;
Apache ant build file for Docbook based ebooks
&lt;/description&gt;
&lt;!-- Created by Carlos Araya as part of his eBook research --&gt;

&lt;!-- Required for the IF Task --&gt;
&lt;taskdef resource="net/sf/antcontrib/antcontrib.properties"/&gt;
&lt;!-- Change the value of src_file to the name of your ebook file without extension--&gt;
&lt;property name="src_file" value="docbook-howto"/&gt;
&lt;!-- Configure the path to the docbook stylesheets--&gt;
&lt;property name="docbook_path" value="/usr/local/docbook/1.0/xslt/"/&gt;

&lt;!-- Put the name of the binaries that you're using that are not stock on OS X--&gt;
&lt;property name="epubcheck_bin" value="/usr/local/java/epubcheck/epubcheck-3.0b4.jar"/&gt;
&lt;property name="kindlegen_bin" value="/usr/local/kindlegen/kindlegen"/&gt;

&lt;target name="epub2"&gt;
&lt;description&gt;
	Convert the XML file into epub2 using a snapshot of the stylesheets
&lt;/description&gt;
&lt;!-- Remove prior versions of the content we're generating --&gt;
&lt;antcall target="epub-clean"/&gt;
&lt;!-- Validate XML --&gt;
&lt;antcall target="validate-xml"/&gt;
&lt;!-- Run the stylesheet conversion --&gt;
&lt;exec executable="xsltproc"&gt;
	&lt;arg line="${docbook_path}epub/docbook.xsl ${src_file}.xml"/&gt;
&lt;/exec&gt;
&lt;!-- Create mimetype file, required per epub spec --&gt;
&lt;antcall target="make-mime"/&gt;
&lt;!-- zips the fills for the epub --&gt;
&lt;antcall target="epub-zip"/&gt;
&lt;!-- Runs epubcheck on the epub file --&gt;
&lt;antcall target="epub-check"/&gt;
&lt;!-- Creates a Kindle version of the book --&gt;
&lt;antcall target="make-kindle"/&gt;
&lt;/target&gt;

&lt;target name="epub3"&gt;
&lt;description&gt;
	Convert the XML file into epub3 using a snapshot of the stylesheets. 
	We do it with snapshot because epub3 support is still experimental
&lt;/description&gt;
&lt;!-- Remove prior versions of the content we're generating --&gt;
&lt;antcall target="epub-clean"/&gt;
&lt;!-- Validate XML --&gt;
&lt;antcall target="validate-xml"/&gt;
&lt;!-- Run the xslt transformation... we should be able to use the XSLT ant task but xsltproc is faster --&gt;
&lt;exec executable="xsltproc"&gt;
	&lt;arg line="--stringparam base.dir OEBPS/ ${docbook_path}epub3/chunk.xsl ${src_file}.xml"/&gt;
&lt;/exec&gt;
&lt;!-- zips the fils for the epub --&gt;
&lt;antcall target="epub-zip"/&gt;
&lt;!-- Runs epubcheck on the epub file --&gt;
&lt;antcall target="epub-check"/&gt;
&lt;/target&gt;


&lt;!-- Utility targets called from elsewhere epub2 and/or epub3 targets--&gt;
&lt;target name="make-mime"&gt;
&lt;!-- Creates mimetype file as required by epub spec--&gt;
&lt;echo file="mimetype"&gt;application/epub+zip&lt;/echo&gt;
&lt;/target&gt;

&lt;target name="make-kindle"&gt;
&lt;exec executable="${kindlegen_bin}"&gt;
	&lt;arg line="${src_file}.epub"/&gt;
&lt;/exec&gt;
&lt;/target&gt;

&lt;target name="epub-zip"&gt;
&lt;!-- We use exec zip because I can't figure out if the builtin zip task conforms to what ePub expects --&gt;
&lt;!-- Zip the mimetype first without compression as required--&gt;
&lt;exec executable="zip"&gt;
&lt;arg line="-X0 ${src_file}.epub mimetype"/&gt;
&lt;/exec&gt;
&lt;!-- Then zip the other files into the zip/epub archive --&gt;
&lt;exec executable="zip"&gt;
&lt;arg line="-r -X9 ${src_file}.epub META-INF OEBPS"/&gt;
&lt;/exec&gt;
&lt;/target&gt;

&lt;target name="epub-check"&gt;
&lt;java jar="${epubcheck_bin}" fork="true" failonerror="true" maxmemory="128m"&gt;
	&lt;arg value="${src_file}.epub"/&gt;
&lt;/java&gt;
&lt;/target&gt;

&lt;!-- Cleans up leftover epub stuff--&gt;
&lt;target name="epub-clean"&gt;
&lt;description&gt;
	Cleans up leftover epub stuff
&lt;/description&gt;
&lt;if&gt;
	&lt;available file="OEBPS" type="dir" /&gt;
	&lt;then&gt;
		&lt;echo message="Directory exist... deleting" /&gt;
		&lt;delete verbose="true"&gt;
			&lt;fileset dir="OEBPS" includes="*"/&gt;
			&lt;fileset dir="META-INF" includes="*"/&gt;
		&lt;/delete&gt;
		&lt;delete verbose="true" file="mimetype"/&gt;
		&lt;delete verbose="true" dir="META-INF"/&gt;
		&lt;delete verbose="true" dir="OEBPS"/&gt;
		&lt;delete verbose="true" file="${src_file}.epub"/&gt;
	&lt;/then&gt;
	&lt;else&gt;
		&lt;echo message="Directory DOES NOT exist... Nothing to delete" /&gt;
	&lt;/else&gt;
&lt;/if&gt;
&lt;/target&gt;

&lt;!-- We call xmllint to make sure that the XML validates--&gt;
&lt;target name="validate-xml"&gt;
&lt;exec executable="xmllint"&gt;
	&lt;arg line="-noent -noout ${src_file}.xml"/&gt;
&lt;/exec&gt;
&lt;/target&gt;
&lt;/project&gt;</programlisting>
</sect1>
</chapter>

<chapter>
<title>Publishing your content</title>

<para>This is where we talk about publishing your content yourself, publishing to Amazon and, maybe, to the iBooks store</para>
</chapter>

<bibliography>
<title>References</title>

<bibliomixed>
	<bibliomset relation='book'>Sayton, Robert.
 		<title role='book'>XSL: The Definitive Guide</title>.
	</bibliomset>
	<bibliomset relation='website'>
		[Available online]<title>The World Wide Web Journal</title>
		<volumenum>2</volumenum><issuenum>1</issuenum>.
		<publishername>O'Reilly &amp; Associates, Inc.</publishername> and The World Wide Web Consortium. Winter, 1996</bibliomset>.
	</bibliomixed>
</bibliography>

<!--
<colophon>
<para>Draft versions of the first edition of this book were produced with the DocBook DSSSL Stylesheets. Final production was performed with Troff.</para>
<para>XSLT and XSL were used to produce the second edition.</para>
</colophon>
-->
</book>