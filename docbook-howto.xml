<?xml version="1.0" encoding="utf-8"?>
<book xmlns='http://docbook.org/ns/docbook' version="5.0" xml:lang="en">
<title>Using Docbook to generate ePub books and Kindle too</title>
<info>
	<author>
		<personname>
			<firstname>Carlos</firstname><surname>Araya</surname>
		</personname>
	</author>
	</info>
<preface>
<title>Publishing for everyone</title>

<para>Publishing is no longer the province of big publishers or all that crazy people who dream of writing a book and find out that the only way to get published is to do it themselves. Well, we all can publish our work with tools like Docbook,  formats like ePub and publishers like Amazon.</para>

<para></para>
</preface>
<chapter>
<title>A Chapter</title>
	<para>Content is required in chapters too.</para>
</chapter>

<chapter>
<title>A Chapter</title>
	<para>Content is required in chapters too.</para>
</chapter>


<appendix>
	<title>The Ant build file</title>
<screen>
&lt;project name="epub" default="epub3" basedir="."&gt;
&lt;description&gt;
	Apache ant build file for Docbook based ebooks
&lt;/description&gt;
&lt;!-- Created by Carlos Araya as part of his eBook research --&gt;

&lt;!-- Change the value of src_file to the name of your ebook file without extension--&gt;
&lt;property name="src_file" value="docbook-howto"/&gt;

&lt;!-- Put the name of the binaries that you're using that are not stock on OS X--&gt;
&lt;property name="epubcheck_bin" value="/usr/local/java/epubcheck/epubcheck-3.0b4.jar"/&gt;
&lt;property name="kindlegen_bin" value="/usr/local/kindlegen/kindlegen"/&gt;


&lt;target name="epub2"&gt;
	&lt;description&gt;
		Convert the XML file into epub2 using a snapshot of the stylesheets
	&lt;/description&gt;
	&lt;!-- Validate XML --&gt;
	&lt;antcall target="validate-xml"/&gt;
	&lt;!-- Run the stylesheet conversion --&gt;
	&lt;exec executable="xsltproc"&gt;
		&lt;arg line="/usr/local/docbook/1.0/xslt/epub/docbook.xsl ${src_file}.xml"/&gt;
	&lt;/exec&gt;
	&lt;!-- Create mimetype file, required per epub spec --&gt;
	&lt;antcall target="make-mime"/&gt;
	&lt;!-- zips the fills for the epub --&gt;
	&lt;antcall target="epub-zip"/&gt;
	&lt;!-- Runs epubcheck on the epub file --&gt;
	&lt;antcall target="epub-check"/&gt;
	&lt;!-- Creates a Kindle version of the book --&gt;
	&lt;antcall target="make-kindle"/&gt;
&lt;/target&gt;

&lt;target name="epub3"&gt;
	&lt;description&gt;
		Convert the XML file into epub3 using a snapshot of the stylesheets. 
		We do it with snapshot because epub3 support is still experimental
	&lt;/description&gt;
	&lt;!-- Validate XML --&gt;
	&lt;antcall target="validate-xml"/&gt;
	&lt;!-- Run the xslt transformation... theoretically we should be able to use the XSLT ant task but
	     xsltproc is faster
	--&gt;
	&lt;exec executable="xsltproc"&gt;
		&lt;arg line="--stringparam base.dir OEBPS/ /usr/local/docbook/1.0/xslt/epub3/chunk.xsl ${src_file}.xml"/&gt;
	&lt;/exec&gt;
	&lt;!-- zips the fils for the epub --&gt;
	&lt;antcall target="epub-zip"/&gt;
	&lt;!-- Runs epubcheck on the epub file --&gt;
	&lt;antcall target="epub-check"/&gt;
&lt;/target&gt;


&lt;!-- Utility targets called from elsewhere epub2 and epub3 targets--&gt;
&lt;target name="make-mime"&gt;
	&lt;!-- Creates mimetype file as required by epub spec--&gt;
	&lt;echo file="mimetype"&gt;application/epub+zip&lt;/echo&gt;
&lt;/target&gt;

&lt;target name="make-kindle"&gt;
	&lt;exec executable="${kindlegen_bin}"&gt;
		&lt;arg line="${src_file}.epub"/&gt;
	&lt;/exec&gt;
&lt;/target&gt;

&lt;target name="epub-zip"&gt;
&lt;!-- We use exec zip because I can't figure out if the builtin zip task conforms to what ePub expects --&gt;
&lt;!-- Zip the mimetype first without compression as required--&gt;
&lt;exec executable="zip"&gt;
	&lt;arg line="-X0 ${src_file}.epub mimetype"/&gt;
&lt;/exec&gt;
&lt;!-- Then zip the other files into the zip/epub archive --&gt;
&lt;exec executable="zip"&gt;
	&lt;arg line="-r -X9 ${src_file}.epub META-INF OEBPS"/&gt;
&lt;/exec&gt;
&lt;/target&gt;

&lt;target name="epub-check"&gt;
	&lt;java jar="${epubcheck_bin}" fork="true" failonerror="true" maxmemory="128m"&gt;
		&lt;arg value="${src_file}.epub"/&gt;
	&lt;/java&gt;
&lt;/target&gt;

&lt;!-- Cleans up leftover epub stuff--&gt;
&lt;target name="epub-clean"&gt;
	&lt;description&gt;
		Cleans up leftover epub stuff
	&lt;/description&gt;
	&lt;delete verbose="true"&gt;
		&lt;fileset dir="OEBPS" includes="*"/&gt;
		&lt;fileset dir="META-INF" includes="*"/&gt;
	&lt;/delete&gt;
	&lt;delete verbose="true" file="mimetype"/&gt;
	&lt;delete verbose="true" dir="META-INF"/&gt;
	&lt;delete verbose="true" dir="OEBPS"/&gt;
	&lt;delete verbose="true" file="${src_file}.epub"/&gt;
&lt;/target&gt;

&lt;!-- We call xmllint to make sure that the XML validates--&gt;
&lt;target name="validate-xml"&gt;
	&lt;exec executable="xmllint"&gt;
		&lt;arg line="-noent -noout ${src_file}.xml"/&gt;
	&lt;/exec&gt;
&lt;/target&gt;
&lt;/project&gt;
</screen>
</appendix>

<bibliography>
<title>References</title>

<bibliomixed>
	<bibliomset relation='article'>Walsh, Norman.
 		<title role='article'>Introduction to Cascading Style Sheets</title>.
	</bibliomset>
	<bibliomset relation='journal'>
		<title>The World Wide Web Journal</title>
		<volumenum>2</volumenum><issuenum>1</issuenum>.
		<publishername>O'Reilly &amp; Associates, Inc.</publishername> and The World Wide Web Consortium. Winter, 1996</bibliomset>.
	</bibliomixed>

</bibliography>
</book>